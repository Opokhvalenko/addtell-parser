generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  creatives Creative[]
  lineItems LineItem[]
}

model Feed {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  url       String     @unique
  title     String?
  items     FeedItem[]
  updatedAt DateTime   @updatedAt
  createdAt DateTime   @default(now())
}

model FeedItem {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  feedId    String    @db.ObjectId
  feed      Feed      @relation(fields: [feedId], references: [id])
  guid      String?
  link      String
  title     String?
  content   String?
  pubDate   DateTime?
  createdAt DateTime  @default(now())

  @@unique([feedId, link])
  @@index([feedId])
}

model Creative {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  ownerId String @db.ObjectId
  owner   User   @relation(fields: [ownerId], references: [id])

  filename  String
  url       String
  mime      String
  width     Int?
  height    Int?
  html      String?
  meta      Json?
  createdAt DateTime @default(now())

  lineItems LineItem[]

  @@index([ownerId])
}

model LineItem {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  ownerId         String   @db.ObjectId
  owner           User     @relation(fields: [ownerId], references: [id])
  name            String
  creativeId      String   @db.ObjectId
  creative        Creative @relation(fields: [creativeId], references: [id])
  sizes           String[]
  adType          String
  geo             String[] @default([])
  minCpm          Float?
  maxCpm          Float?
  frequencyPerDay Int?
  active          Boolean  @default(true)
  createdAt       DateTime @default(now())
}

model Impression {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  uid        String
  lineItemId String   @db.ObjectId
  at         DateTime @default(now())

  @@index([uid, lineItemId, at])
}

model AdEvent {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  kind       String
  uid        String?
  lineItemId String?  @db.ObjectId
  at         DateTime @default(now())
  tookMs     Int?
  extra      Json?

  @@index([kind, at])
}

model RequestCounter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  key       String   @unique
  value     Int      @default(0)
  updatedAt DateTime @updatedAt
}
