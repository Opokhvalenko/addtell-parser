services:
  mongo-keyfile:
    image: alpine:3.20
    command: >
      sh -lc '
        set -e;
        mkdir -p /data/config;
        if [ ! -f /data/config/keyfile ]; then
          head -c 756 /dev/urandom | base64 > /data/config/keyfile;
        fi;
        chmod 600 /data/config/keyfile;
        chown -R 999:999 /data
      '
    volumes:
      - mongo_data:/data
    restart: "no"

  mongo:
    image: mongo:7
    depends_on:
      mongo-keyfile:
        condition: service_completed_successfully
    command:
      [ "mongod", "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/data/config/keyfile" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27017:27017" 
    volumes:
      - mongo_data:/data/db
      - mongo_data:/data
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' -u root -p root --authenticationDatabase admin | grep 1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 20s

  mongo-setup:
    image: mongo:7
    depends_on:
      mongo:
        condition: service_healthy
    restart: "no"
    entrypoint:
      - bash
      - -lc
      - |
        set -e
        echo "Ensuring replica set is initiated..."
        mongosh --quiet --host mongo -u root -p root --authenticationDatabase admin --eval '
          try { const s = rs.status(); print("Replica set already exists:", s.set); }
          catch (e) { print("Replica set not initiated, initiating...");
            rs.initiate({ _id: "rs0", members: [{ _id: 0, host: "mongo:27017" }] }); }
        '

  backend:
    build: .
    container_name: backend
    depends_on:
      mongo:
        condition: service_healthy
      mongo-setup:
        condition: service_completed_successfully
    environment:
      NODE_ENV: production
      PORT: "3000"
      HOST: "0.0.0.0"
      DATABASE_URL: "mongodb://root:root@mongo:27017/feeds?authSource=admin&replicaSet=rs0"
      DEFAULT_FEED_URL: "https://hnrss.org/frontpage"
      JWT_SECRET: "this_is_a_demo_secret_change_me_32+_chars_long"
    ports:
      - "3000:3000"

volumes:
  mongo_data: