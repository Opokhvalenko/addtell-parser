name: CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

# щоб нові пуші в той самий PR/гілку скасовували попередній запуск
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Biome check
        run: npm run lint   # biome v2: 'biome check .'

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    services:
      mongo:
        image: mongo:7
        ports:
          - "27017:27017"
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
        # healthcheck щоб не стартувати, поки Mongo не готовий
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })' -u root -p root --authenticationDatabase admin || exit 1"
          --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      NODE_ENV: test
      PORT: "3000"
      # важливо: у CI підключаємось до localhost (порт сервісу проброшений)
      DATABASE_URL: "mongodb://root:root@localhost:27017/feeds?authSource=admin"
      DEFAULT_FEED_URL: "https://hnrss.org/frontpage"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: TypeScript build
        run: npm run build